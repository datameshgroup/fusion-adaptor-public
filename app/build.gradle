plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    // Add the Crashlytics Gradle plugin
    id 'com.google.firebase.crashlytics'
}

android {
    namespace 'au.com.dmg.fusionadaptor'
    compileSdk 33
    testOptions {
        unitTests {
            includeAndroidResources = false
        }
    }

    defaultConfig {
        applicationId "au.com.dmg.fusionadaptor"
        minSdk 23
        targetSdk 33
        versionCode 2

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    flavorDimensions 'device'

    ext {
        deviceVersions = [:]
    }

    productFlavors {

        def versionFormat = "${rootProject.ext.major_version}".padLeft(3, '0')
        def apkName = rootProject.ext.apk_name

        def createDeviceFlavor = { device, prefix ->
            "${device}" {
                dimension "device"

                resValue "string", "device_version", "${device}"

                def deviceVersion = "${prefix}${versionFormat}"
                println("${device}Version: $deviceVersion")
                resValue "integer", "application_int_version", "${deviceVersion}"

                versionName "${deviceVersion}${rootProject.ext.minor_version}"
                resValue "string", "application_version", versionName

                resValue "string", "application_name", "${apkName}${versionName}"

//                archivesBaseName = "FusionAdaptor" + deviceVersion
                resValue "string", "app_name_display", apkName + " v" + versionName

//                setProperty("archivesBaseName", archivesBaseName)
                android.ext.deviceVersions[device] = versionName //deviceVersion
            }
        }

        createDeviceFlavor("pax", "3")

        createDeviceFlavor("ingenico", "2")

        createDeviceFlavor("offdevice", "1")
    }

    applicationVariants.all { variant ->
        def deviceFlavor = variant.productFlavors.get(0)
        def deviceVersion = android.ext.deviceVersions[deviceFlavor.name]

        variant.outputs.each { output ->
            output.outputFileName = "FusionAdaptor${deviceVersion}-${variant.buildType.name}-${deviceFlavor.name}.apk"
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            shrinkResources false
            debuggable = false
            signingConfig signingConfigs.debug
            if (project.hasProperty("pax")) {
                v2SigningEnabled false
            }
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            shrinkResources false
            signingConfig signingConfigs.debug
            debuggable = true
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        coreLibraryDesugaringEnabled true
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    lint {
        abortOnError false
        checkReleaseBuilds false
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
            pickFirst 'javax/xml/bind/util/Messages.properties'
        }
    }
}

dependencies {
    implementation files('libs/jndi-1.2.1.jar')
    implementation 'androidx.constraintlayout:constraintlayout-core:1.0.4'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.4.1"
    def lifecycle_version = "2.2.0"

    // viewmodel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    implementation "androidx.fragment:fragment-ktx:$fragment_version"
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation 'com.datameshgroup.fusion:fusion-cloud:1.0.6'
//    implementation files('libs/fusion-cloud-1.0.5.jar')
    implementation ('com.datameshgroup.fusion:fusion-sdk:1.3.26'){
        exclude group:"org.json", module:"json"
    }
    implementation group: 'javax.json', name: 'javax.json-api', version: '1.0'
    implementation group: 'org.glassfish.tyrus.bundles', name: 'tyrus-standalone-client', version: '1.12'
    implementation 'com.google.code.gson:gson:2.8.7'
    implementation 'com.google.zxing:core:2.2' // For QR code
    implementation 'javax.inject:javax.inject:1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'


    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'

    implementation "com.squareup.moshi:moshi-kotlin:1.14.0"
    implementation "com.airbnb.android:lottie:3.7.0"
    implementation 'commons-codec:commons-codec:1.15'

    implementation 'org.simpleframework:simple-xml:2.7.1'
    implementation "androidx.datastore:datastore-preferences:1.0.0"

    // For Android instrumented tests
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //Firebase
    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:31.0.2')

    // TODO: Add the dependencies for Firebase products you want to use
    // When using the BoM, don't specify versions in Firebase dependencies
//    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation("com.google.firebase:firebase-crashlytics-ktx")

    // Add the dependencies for any other desired Firebase products
    // https://firebase.google.com/docs/android/setup#available-libraries
}